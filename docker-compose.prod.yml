version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: fastapi-prod:latest
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/prod_db
    depends_on:
      - db
    networks:
      - backend
    volumes:
      - static_data:/app/app/static:rw

  nginx:
    image: nginx:1.23-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - static_data:/app/app/static:ro
    depends_on:
      - web
    networks:
      - frontend
      - backend

  db:
    image: postgres:13-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: prod_db
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - backend

  postgres_exporter:  # 新增PostgreSQL监控组件
    image: prometheuscommunity/postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://user:password@db:5432/prod_db?sslmode=disable"
    ports:
      - "29187:9187"
    networks:
      - backend
    depends_on:
      - db

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus
    networks:
      - backend

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning  # 预配置仪表盘
    networks:
      - backend

networks:
  frontend: # 仅Nginx暴露端口
  backend: #内部服务通信

volumes:
  pg_data:
  static_data:
  prom_data:
  grafana_data: