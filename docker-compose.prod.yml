version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: fastapi-prod:latest
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/prod_db
    depends_on:
      - db
    networks:
      - backend
    volumes:
      - static_data:/app/app/static:rw

  nginx:
    image: nginx:1.23-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - static_data:/app/app/static:ro
    depends_on:
      - web
    networks:
      - frontend

  db:
    image: postgres:13-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: prod_db
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - backend
      # 添加监控服务

  prometheus:
      image: prom/prometheus
      ports: [ "9090:9090" ]
      volumes:
          - ./prometheus:/etc/prometheus

      networks:
          - backend

  grafana:
      image: grafana/grafana
      ports: [ "3000:3000" ]
      networks:
          - backend

networks:
  frontend:
  backend:

volumes:
  pg_data:
  static_data: